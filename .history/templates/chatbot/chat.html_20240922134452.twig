<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{{ asset('assets/styles/app.css') }}">
    <title>LLAMA3-CHAT</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <button class="new-chat" id="new-chat">New Chat</button>

            <!-- Section des boutons Home et Upgrade -->
            <div class="sidebar-top">
                <button class="nav-button" id="home-button">Home</button>
                <button class="nav-button" id="upgrade-button">Upgrade</button>
            </div>

            <!-- Ligne horizontale -->
            <hr>

            <!-- Section des suggestions de questions -->
            <div class="suggestions">
                <h3>Suggestions</h3>
                <button class="suggestion-button">Comment fonctionne Llama3 ?</button>
                <button class="suggestion-button">Quelles sont les capacités du modèle ?</button>
                <button class="suggestion-button">Quels sont les avantages de ce modèle ?</button>
            </div>

            <!-- Ligne horizontale pour séparer les suggestions et l'historique des chats -->
            <hr>

            <!-- Historique des chats -->
            <div class="chat-history">
                <h3>Chat History</h3>
                <ul id="history-list">
                    <!-- Historique des chats s'affichera ici -->
                </ul>
            </div>
        </div>

        <!-- Chat Container -->
        <div class="chat-container">
            <div class="chat-header">
                <img src="{{ asset('../assets/images/llama.jpg') }}" alt="Llama3 Logo" class="logo">
                <h1>LLAMA3-CHAT</h1>
                <div class="status-indicator"></div>
            </div>
            <div class="chat-body" id="chat-body">
                <!-- Les messages s'afficheront ici -->
            </div>

            <!-- Formulaire de chat -->
            <form id="chat-form" class="chat-input">
                <input type="text" id="message" placeholder="Posez votre question..." autocomplete="off">
                <button type="submit">Envoyer</button>
            </form>

            <!-- Section de l'image de l'utilisateur -->
            <div class="user-image">
                <img src="{{ asset('assets/images/photo-1.jpg') }}" alt="User Profile" class="profile-img">
                <input type="file" id="upload-avatar" accept="image/*" style="display: none;">
            </div>

            <!-- Indicateur de saisie -->
            <div id="typing-indicator" class="typing-indicator" style="display:none;">
                <span></span><span></span><span></span>
            </div>
        </div>
    </div>

<script src="{{ asset('assets/chat.js') }}"></script>
<script>
    // Fonction pour envoyer le message au bot
    function sendMessage(message) {
        const chatBody = document.getElementById('chat-body');

        // Ajouter le message de l'utilisateur
        const userMessage = document.createElement('div');
        userMessage.classList.add('user-message');
        userMessage.innerText = message;
        chatBody.appendChild(userMessage);

        // Scroller vers le bas pour voir le message ajouté
        chatBody.scrollTop = chatBody.scrollHeight;

        // Envoyer la requête au bot
        fetch(`/chat?message=${encodeURIComponent(message)}`)
            .then(response => response.json())
            .then(data => {
                // Ajouter la réponse du bot
                const botResponse = document.createElement('div');
                botResponse.classList.add('bot-message');
                botResponse.innerText = data.response;
                chatBody.appendChild(botResponse);

                // Scroller vers le bas pour voir la réponse
                chatBody.scrollTop = chatBody.scrollHeight;
            })
            .catch(error => {
                console.error('Erreur :', error);
            });
    }

    // Gestion des boutons de suggestion de questions
    document.querySelectorAll('.suggestion-button').forEach(button => {
        button.addEventListener('click', function() {
            const message = this.innerText;
            sendMessage(message);  // Envoie la question de suggestion
        });
    });

    // Gestion du formulaire de chat
    document.getElementById('chat-form').addEventListener('submit', function(event) {
        event.preventDefault();  // Empêche le rechargement de la page
        const messageInput = document.getElementById('message');
        const message = messageInput.value.trim();  // Supprime les espaces inutiles

        if (message !== '') {
            sendMessage(message);  // Envoie la question de l'utilisateur
            messageInput.value = '';  // Vide le champ de saisie après envoi
        }
    });
</script>
</body>
</html>
